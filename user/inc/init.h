#include "ll.h"

/* inline void ADC_Config()
{
    LL_APB1_GRP1_EnableClock()
    LL_ADC_InitTypeDef
} */

inline void SPI_Config()
{
    LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);

    LL_GPIO_SetPinMode(GPIOA,LL_GPIO_PIN_5,LL_GPIO_MODE_ALTERNATE);
    LL_GPIO_SetPinSpeed(GPIOA,LL_GPIO_PIN_5,LL_GPIO_SPEED_FREQ_HIGH);
    LL_GPIO_SetAFPin_0_7(GPIOA,LL_GPIO_PIN_5,LL_GPIO_AF_5);

    LL_GPIO_SetPinMode(GPIOA,LL_GPIO_PIN_7,LL_GPIO_MODE_ALTERNATE);
    LL_GPIO_SetPinSpeed(GPIOA,LL_GPIO_PIN_7,LL_GPIO_SPEED_FREQ_HIGH);
    LL_GPIO_SetAFPin_0_7(GPIOA,LL_GPIO_PIN_7,LL_GPIO_AF_5);

    LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_SPI1);
    LL_SPI_SetMode(SPI1,LL_SPI_MODE_MASTER);
    LL_SPI_SetStandard(SPI1,LL_SPI_PROTOCOL_MOTOROLA);
    LL_SPI_SetClockPhase(SPI1,LL_SPI_PHASE_1EDGE);
    LL_SPI_SetClockPolarity(SPI1,LL_SPI_POLARITY_LOW);
    LL_SPI_SetBaudRatePrescaler(SPI1,LL_SPI_BAUDRATEPRESCALER_DIV32);
    LL_SPI_SetTransferBitOrder(SPI1,LL_SPI_MSB_FIRST);
    LL_SPI_SetTransferDirection(SPI1,LL_SPI_HALF_DUPLEX_TX);
    LL_SPI_SetDataWidth(SPI1,LL_SPI_DATAWIDTH_8BIT);

    LL_SPI_EnableDMAReq_TX(SPI1);

    LL_DMA_ConfigTransfer(DMA1,LL_DMA_CHANNEL_1,LL_DMA_DIRECTION_MEMORY_TO_PERIPH | LL_DMA_MODE_NORMAL | LL_DMA_PERIPH_NOINCREMENT | LL_DMA_MEMORY_INCREMENT | LL_DMA_MDATAALIGN_HALFWORD | LL_DMA_PDATAALIGN_HALFWORD | LL_DMA_PRIORITY_LOW);
}

inline void TIM7_Config()
{
    LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM7);
    LL_TIM_SetPrescaler(TIM7,3999);
    LL_TIM_SetAutoReload(TIM7,3999);
    LL_TIM_SetCounterMode(TIM7,LL_TIM_COUNTERMODE_UP);
    LL_TIM_SetClockDivision(TIM7,LL_TIM_CLOCKDIVISION_DIV1);
    LL_TIM_SetRepetitionCounter(TIM7,0);
    NVIC_SetPriority(TIM7_IRQn, 1);
    NVIC_EnableIRQ(TIM7_IRQn);
    LL_TIM_EnableIT_UPDATE(TIM7);
    LL_TIM_EnableCounter(TIM7);
}

inline void GPIO_Config()
{
    LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOC);
    LL_GPIO_SetPinMode(GPIOC,LL_GPIO_PIN_6,LL_GPIO_MODE_OUTPUT);
    LL_GPIO_SetPinOutputType(GPIOC, LL_GPIO_PIN_6, LL_GPIO_OUTPUT_PUSHPULL);
    LL_GPIO_SetPinSpeed(GPIOC, LL_GPIO_PIN_6, LL_GPIO_SPEED_FREQ_HIGH);
    LL_GPIO_SetOutputPin(GPIOC,LL_GPIO_PIN_6);
}

inline void USART_Config()
{
    LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);

    LL_GPIO_SetPinMode(GPIOA,LL_GPIO_PIN_9,LL_GPIO_MODE_ALTERNATE);
    LL_GPIO_SetPinOutputType(GPIOA,LL_GPIO_PIN_9,LL_GPIO_OUTPUT_PUSHPULL);
    LL_GPIO_SetPinSpeed(GPIOA,LL_GPIO_PIN_9,LL_GPIO_SPEED_FREQ_HIGH);
    LL_GPIO_SetAFPin_8_15(GPIOA,LL_GPIO_PIN_9,LL_GPIO_AF_7);

    LL_GPIO_SetPinMode(GPIOA,LL_GPIO_PIN_10,LL_GPIO_MODE_ALTERNATE);
    LL_GPIO_SetPinOutputType(GPIOA,LL_GPIO_PIN_10,LL_GPIO_OUTPUT_PUSHPULL);
    LL_GPIO_SetPinSpeed(GPIOA,LL_GPIO_PIN_10,LL_GPIO_SPEED_FREQ_HIGH);
    LL_GPIO_SetAFPin_8_15(GPIOA,LL_GPIO_PIN_10,LL_GPIO_AF_7);

    LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_USART1);

    LL_USART_SetPrescaler(USART1,LL_USART_PRESCALER_DIV16);
    LL_USART_SetBaudRate(USART1,160000000,LL_USART_PRESCALER_DIV16,LL_USART_OVERSAMPLING_16,115200);
    LL_USART_SetDataWidth(USART1,LL_USART_DATAWIDTH_8B);
    LL_USART_SetHWFlowCtrl(USART1,LL_USART_HWCONTROL_NONE);
    LL_USART_SetParity(USART1,LL_USART_PARITY_NONE);
    LL_USART_SetStopBitsLength(USART1,LL_USART_STOPBITS_1);
    LL_USART_SetTransferDirection(USART1,LL_USART_DIRECTION_TX_RX);
    LL_USART_ConfigAsyncMode(USART1);
    LL_USART_Enable(USART1);

    LL_USART_EnableDMAReq_TX(USART1);
    LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMAMUX1);
    LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMA1);
    LL_DMA_ConfigTransfer(DMA1,LL_DMA_CHANNEL_1,LL_DMA_DIRECTION_MEMORY_TO_PERIPH | LL_DMA_MODE_NORMAL | LL_DMA_PERIPH_NOINCREMENT | LL_DMA_MEMORY_INCREMENT | LL_DMA_MDATAALIGN_BYTE | LL_DMA_PDATAALIGN_BYTE | LL_DMA_PRIORITY_LOW);
    LL_DMA_SetPeriphAddress(DMA1,LL_DMA_CHANNEL_1,LL_USART_DMA_GetRegAddr(USART1,LL_USART_DMA_REG_DATA_TRANSMIT));
    LL_DMA_SetPeriphRequest(DMA1,LL_DMA_CHANNEL_1,LL_DMAMUX_REQ_USART1_TX);
}

inline void Sys_Config()
{
    LL_RCC_HSE_Enable();
    while(LL_RCC_HSE_IsReady() != 1);
    LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSE,LL_RCC_PLLM_DIV_1,40,LL_RCC_PLLR_DIV_2);
    LL_RCC_PLL_Enable();
    LL_RCC_PLL_EnableDomain_SYS();
    while(LL_RCC_PLL_IsReady() != 1);
    FLASH -> ACR &= ~FLASH_ACR_LATENCY;
    FLASH -> ACR |= FLASH_ACR_LATENCY_4WS;
    LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
    LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
    LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
    
    LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
    while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL);
}